name: CI/CD

on:
  push:
    branches: ["main", "develop"]

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  CONTAINER_NAME: "concert-service:latest"
  RESOURCE_GROUP: "cm"
  CLUSTER_NAME: "cm-aks-cluster"
  DEPLOYMENT_MANIFEST_PATH: "./deployment.yml"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Test
      run: dotnet test

  # sonarcloud:
  #   runs-on: ubuntu-latest
  #   needs: test
  #   steps:
  #   - name: Setup JDK 17
  #     uses: actions/setup-java@v3
  #     with:
  #       java-version: 17
  #       distribution: 'zulu'
  #   - uses: actions/checkout@v4
  #     with:
  #       fetch-depth: 0
  #   - name: Cache SonarCloud packages
  #     uses: actions/cache@v3
  #     with:
  #       path: ~/.sonar/cache
  #       key: ${{ runner.os }}-sonar
  #       restore-keys: ${{ runner.os }}-sonar
  #   - name: Cache SonarCloud scanner
  #     id: cache-sonar-scanner
  #     uses: actions/cache@v3
  #     with:
  #       path: ./.sonar/scanner
  #       key: ${{ runner.os }}-sonar-scanner
  #       restore-keys: ${{ runner.os }}-sonar-scanner

  #   - name: SonarCloud Scan
  #     uses: sonarsource/sonarcloud-github-action@v2.2.0 
  #     env:
  #       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #     with:
  #       projectBaseDir: ./concert.API
  # sonarcloud:
  #   runs-on: ubuntu-latest
  #   needs: ["build"]
  #   steps:
  #   - uses: actions/checkout@v4
  #     with:
  #       # Disabling shallow clone is recommended for improving relevancy of reporting
  #       fetch-depth: 0
  #   - name: SonarCloud Scan
  #     uses: sonarsource/sonarcloud-github-action@v2.2.0 # Ex: v2.1.0, See the latest version at https://github.com/marketplace/actions/sonarcloud-scan
  #     env:
  #       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #     with:
  #       projectBaseDir: ./concert.API
  #       args: >
  #         -Dsonar.organization=concert-meetup
  #         -Dsonar.projectKey=concert-service
  #         # -Dsonar.python.coverage.reportPaths=coverage.xml
  #         # -Dsonar.sources=lib/
  #         # -Dsonar.test.exclusions=tests/**
  #         # -Dsonar.tests=tests/
  #         # -Dsonar.verbose=true

  # sonarcloud:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4

  #   - name: Setup JDK 17
  #     uses: actions/setup-java@v3
  #     with:
  #       java-version: 17
  #       distribution: 'zulu'

  #   - name: Cache SonarCloud packages
  #     uses: actions/cache@v3
  #     with:
  #       path: ~/.sonar/cache
  #       key: ${{ runner.os }}-sonar
  #       restore-keys: ${{ runner.os }}-sonar

  #   - name: Cache SonarCloud scanner
  #     uses: actions/cache@v3
  #     with:
  #       path: ./.sonar/scanner
  #       key: ${{ runner.os }}-sonar-scanner
  #       restore-keys: ${{ runner.os }}-sonar-scanner

  #   - name: Run SonarCloud Scan
  #     uses: sonarsource/sonarcloud-github-action@v2.2.0
  #     env:
  #       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #     with:
  #       args: >
  #         -Dsonar.organization=concert-meetup
  #         -Dsonar.projectKey=concert-meetup_concert-service
  #         -Dsonar.projectVersion=1.0
  #         -Dsonar.sourceEncoding=UTF-8
  #         -Dsonar.sources=./concert.API

  sonarcloud:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@v2.2.0 # Ex: v2.1.0, See the latest version at https://github.com/marketplace/actions/sonarcloud-scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  docker-image:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    needs: sonarcloud
    steps:
      - uses: actions/checkout@v4
      
      - name: Login to Docker hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        
      - name: Build Docker image
        run: docker build -t "${{ env.DOCKERHUB_USERNAME }}/${{ env.CONTAINER_NAME }}" .

      - name: Push Docker image to Docker hub
        run: docker push "${{ env.DOCKERHUB_USERNAME }}/${{ env.CONTAINER_NAME }}"

  deploy:
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    needs: docker-image
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Azure login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          service-principal: ${{ secrets.AZURE_CLIENT_ID }}
          service-principal-password: ${{ secrets.AZURE_CLIENT_SECRET }}

      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'

      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      - name: Deploy application
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: ${{ env.DEPLOYMENT_MANIFEST_PATH }}
          images: |
            ${{ env.DOCKERHUB_USERNAME }}/${{ env.CONTAINER_NAME }}
      
    
      
    
